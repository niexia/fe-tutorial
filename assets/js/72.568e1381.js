(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{476:function(_,v,t){"use strict";t.r(v);var r=t(38),a=Object(r.a)({},function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"https"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#https","aria-hidden":"true"}},[_._v("#")]),_._v(" https")]),_._v(" "),t("p",[_._v("http 数据提交给 tcp 之后，数据经过用户、路由器、运营商和目标服务器，在这中间的每个环节，数据都有可能被窃取和篡改。")]),_._v(" "),t("p",[_._v("https 在协议栈来看，在 TCP 和 HTTP 之间插入了一个安全层，经过安全层的数据都会加密或者解密。所以要搞清楚 https 是如何工作的，就要弄清楚安全层是怎么工作的。")]),_._v(" "),t("p",[_._v("总的来说，安全层有两个职责："),t("strong",[_._v("对发起 HTTP 请求的数据进行加密操作和对接收到 HTTP 的内容进行解密操作")]),_._v("。")]),_._v(" "),t("h2",{attrs:{id:"_1-使用对称加密"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用对称加密","aria-hidden":"true"}},[_._v("#")]),_._v(" 1. 使用对称加密")]),_._v(" "),t("p",[_._v("提到加密，最简单的方式是使用对称加密。所谓"),t("strong",[_._v("对称加密是指加密和解密都使用的是相同的密钥")]),_._v("。")]),_._v(" "),t("p",[_._v("为了让加密更难以破解，让服务器和客户端同时决定密钥，具体过程如下：")]),_._v(" "),t("ol",[t("li",[_._v("浏览器发送它支持的加密套件（指的就是加密方法）列表和一个随机数 client-random。")]),_._v(" "),t("li",[_._v("副会起会从加密套件中选取一个加密套件，然后还会生成一个随机数 server-random，并将随机数和加密套件列表返回给浏览器。")])]),_._v(" "),t("p",[_._v("这样，浏览器和服务器都有相同的随机数，client-random 和 server-random，然后使用相同的方法将 client-random 和 server-random 混合起来生成一个密钥 master-secret。"),t("strong",[_._v("有了密钥和加密套件之后，就可以进行数据的机密传输了")]),_._v("。")]),_._v(" "),t("p",[_._v("第一版 HTTPS 方法虽然能很好的工作，但是随机数 client-random 和 server-random 传输确实明文，这意味这黑客可以拿到协商的加密套件和随机数，由于利用随机数生成密钥的算法是公开的，所以黑客拿到随机数之后，也可以生成密钥，这样数据依然可以被破解。")]),_._v(" "),t("h2",{attrs:{id:"_2-使用非对称加密"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用非对称加密","aria-hidden":"true"}},[_._v("#")]),_._v(" 2. 使用非对称加密")]),_._v(" "),t("p",[_._v("第二版 HTTPS 可以解决这个问题。")]),_._v(" "),t("p",[t("strong",[_._v("非对称加密相当于有 A，B 两把密钥，如果你用 A 来加密，那么只能用 B 来解密；反过来，如果你用 B 来加密，那么只能用 A 来解密。")])]),_._v(" "),t("p",[_._v("在 HTTPS 中，服务器会将一个密钥以明文的方式发送给浏览器，把这个密钥叫作公钥，服务器自己留下来的叫做私钥。顾名思义，公钥是每个人都能获取到的，而私钥只有服务器才能知道，不对外公开。")]),_._v(" "),t("p",[_._v("使用非对称加密的协商过程是：")]),_._v(" "),t("ol",[t("li",[_._v("浏览器给服务器发送加密套件列表；")]),_._v(" "),t("li",[_._v("服务器选择一个加密套件，因为公钥是给浏览器加密用的，所以会将加密套件和公钥一起发送给浏览器，服务器自己留着私钥。")])]),_._v(" "),t("p",[_._v("这样浏览器就有了服务器的公钥，在发送数据的时候，可以使用公钥来加密。由于公钥加密的数据只有私钥可以解密，所以即使黑客截获了数据和公钥，他也是无法解密的。")]),_._v(" "),t("p",[_._v("因此采用非对称加密，"),t("strong",[_._v("就能保证浏览器发给服务器的数据是安全的")]),_._v("，看上是很完美，但是会存在两个问题：")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("非对称加密的效率太低")]),_._v("。这就严重影响了加解密数据的速度，进而影响到用户打开界面的速度；")]),_._v(" "),t("li",[t("strong",[_._v("无法保证服务器发送给浏览器的数据是安全的")]),_._v("。因为公钥是通过明文发送的，所以黑客可以劫持，这样服务器使用私钥加密的数据可以被解密，无法保证安全。")])]),_._v(" "),t("h2",{attrs:{id:"_3-对称加密和非对称加密搭配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-对称加密和非对称加密搭配","aria-hidden":"true"}},[_._v("#")]),_._v(" 3. 对称加密和非对称加密搭配")]),_._v(" "),t("p",[t("strong",[_._v("数据传输的过程使用对称加密，但是对称加密的密钥使用非对称加密的方式来传输")]),_._v("。client-random + server-random + pre-master = master-secret，三组随机数才生成对称密钥。")]),_._v(" "),t("p",[_._v("浏览器生成随机数 pre-master 之后，已经有了公钥，可以通过非对称加密的方式传给服务器的。这样服务器可以使用私钥来解密，并和随机数一起生成相同的 master-secret。")]),_._v(" "),t("p",[t("strong",[_._v("pre-master 是使用公钥加密之后传输的，所以黑客无法获取到 pre-master，这样黑客就无法生成密钥了，也就保证黑客无法破解传输中的数据。")])]),_._v(" "),t("h2",{attrs:{id:"_4-添加数字证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-添加数字证书","aria-hidden":"true"}},[_._v("#")]),_._v(" 4. 添加数字证书")]),_._v(" "),t("p",[_._v("通过对称和非对称混合的方式，完美的实现数据的加密传输。但是依然存在问题，比如我要打开淘宝，但是黑客通过 DNS 劫持将这个网站的 ip 地址替换成了黑客的 IP 地址，这样访问的其实是黑客的服务器，黑客可以在自己的服务器上实现公钥和私钥。而对于浏览器来说，它完全不知道现在访问的是一个黑客的站点。")]),_._v(" "),t("p",[_._v("通过一个例子理解 DNS 劫持：")]),_._v(" "),t("p",[_._v("一般而言，用户上网的 DNS 服务器都是运营商分配的，所以，在这个节点上，运营商可以为所欲为。\n例如，访问 "),t("code",[_._v("http://jiankang.qq.com/index.html")]),_._v("，正常 DNS 应该返回腾讯的 ip，而 DNS 劫持后，会返回一个运营商的中间服务器 ip。访问该服务器会一致性的返回 302，让用户浏览器跳转到预处理好的带广告的网页，在该网页中再通过 iframe 打开用户原来访问的地址。")]),_._v(" "),t("p",[t("strong",[_._v("所以我们还需要服务器想浏览器提供证明“我就是我”")]),_._v("，那怎么证明呢？")]),_._v(" "),t("p",[_._v("证书，就比如买房子，你需要房管局这个"),t("strong",[_._v("权威机构")]),_._v("，它给你发一个"),t("strong",[_._v("证书")]),_._v("：房产证。")]),_._v(" "),t("p",[_._v("同理，淘宝哟啊证明这个服务器是淘宝，也需要使用权威机构办法的证书，这个权威机构称为 "),t("strong",[_._v("CA")]),_._v("（Certificate Authority），颁发的证书称为"),t("strong",[_._v("数字证书")]),_._v("（Digital Certificate）。")]),_._v(" "),t("p",[_._v("对于浏览器来说，数字证书有两个作用：一个是通过数字证书向浏览器证明服务器的身份，另一个是数字证书里面包含了服务器的公钥。")]),_._v(" "),t("p",[_._v("相对于第 3 版的 HTTPS，这里有两点改变：")]),_._v(" "),t("ol",[t("li",[_._v("服务器没有直接返回公钥给浏览器，而死返回数字证书，而公钥是包含子在数字证书中的；")]),_._v(" "),t("li",[_._v("在浏览器过一个证书验证的操作，验证了证书之后，才继续后续的流程。")])]),_._v(" "),t("p",[_._v("通过引入数字证书，就实现了对服务器的认证功能，这样即使黑客伪造了服务器，但是证书是无法伪造的，所以依然无法欺骗用户。")]),_._v(" "),t("h3",{attrs:{id:"如何申请证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何申请证书","aria-hidden":"true"}},[_._v("#")]),_._v(" 如何申请证书")]),_._v(" "),t("p",[_._v("淘宝向权威机构生成数字证书，通常需要：")]),_._v(" "),t("ul",[t("li",[_._v("准备好材料，向 CA 提供公钥、公司、站点等信息，待认证，认证过程可能收费；")]),_._v(" "),t("li",[_._v("CA 通过线上、线下对材料进行验证；")]),_._v(" "),t("li",[_._v("如果审核通过了，CA 就会向淘宝签发数字证书，包含公钥、组织信息、CA 的信息、有效时间、证书序列号等，这些信息都是明文的，同时包含一个 CA 生成的签名。")])]),_._v(" "),t("p",[_._v("最后那里，CA 通过 "),t("strong",[_._v("Hash 函数")]),_._v("计算对淘宝提交的信息，并得出"),t("strong",[_._v("信息摘要")]),_._v("，然后 CA 使用它的"),t("strong",[_._v("私钥对信息摘要进行加密")]),_._v("，"),t("strong",[_._v("加密后的密文就是 CA 颁给淘宝的数字证书")]),_._v("。这就相当于房管局在房产证上盖的章。整个章是可以验证的。")]),_._v(" "),t("h3",{attrs:{id:"浏览器如何验证数字证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器如何验证数字证书","aria-hidden":"true"}},[_._v("#")]),_._v(" 浏览器如何验证数字证书")]),_._v(" "),t("p",[_._v("有了 CA 签名过的证书，当浏览器向淘宝发出请求时，服务器会返回数字证书给浏览器。")]),_._v(" "),t("p",[_._v("浏览器接收到数字证书之后，首先要读取证书中的明文信息，采用 CA 签名时相同相同的 Hash 函数来计算"),t("strong",[_._v("信息摘要 A")]),_._v("，燃火在利用 CA 的公钥解密签名数据，得到"),t("strong",[_._v("信息摘要 B")]),_._v("；对比信息摘要 A 和信息摘要 B，如果一致，则可以确定是合法的证书。")]),_._v(" "),t("h2",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考","aria-hidden":"true"}},[_._v("#")]),_._v(" 参考")]),_._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/156181",target:"_blank",rel:"noopener noreferrer"}},[_._v("HTTPS：让数据传输更安全"),t("OutboundLink")],1)])])])},[],!1,null,null,null);v.default=a.exports}}]);