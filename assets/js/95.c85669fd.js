(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{357:function(T,t,v){"use strict";v.r(t);var _=v(0),e=Object(_.a)({},(function(){var T=this,t=T.$createElement,v=T._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":T.$parent.slotKey}},[v("h1",{attrs:{id:"get-和-post-的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#get-和-post-的区别"}},[T._v("#")]),T._v(" get 和 post 的区别")]),T._v(" "),v("p",[T._v("直观的区别就是GET把参数包含在URL中，POST通过request body传递参数。")]),T._v(" "),v("p",[T._v("你可能可以给出了一个“标准答案”：")]),T._v(" "),v("ul",[v("li",[T._v("GET请求会被浏览器主动cache，而POST不会，除非手动设置。")]),T._v(" "),v("li",[T._v("GET请求只能进行url编码，而POST支持多种编码方式。")]),T._v(" "),v("li",[T._v("GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。")]),T._v(" "),v("li",[T._v("GET请求在URL中传送的参数是有长度限制的，而POST么有。")]),T._v(" "),v("li",[T._v("对参数的数据类型，GET只接受ASCII字符，而POST没有限制。")]),T._v(" "),v("li",[T._v("GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。")]),T._v(" "),v("li",[T._v("GET参数通过URL传递，POST放在Request body中。")])]),T._v(" "),v("p",[T._v("很遗憾，这不是我们要的回答！")]),T._v(" "),v("h2",{attrs:{id:"本质上没有区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#本质上没有区别"}},[T._v("#")]),T._v(" 本质上没有区别")]),T._v(" "),v("p",[T._v("如果我告诉你GET和POST本质上没有区别你信吗？")]),T._v(" "),v("p",[T._v("GET和POST是什么？HTTP协议中的两种发送请求的方法。HTTP的底层是TCP/IP。所以GET和POST的底层也是TCP/IP，也就是说，GET/POST都是TCP链接。GET和POST能做的事情是一样一样的。你要给GET加上request body，给POST带上url参数，技术上是完全行的通的。")]),T._v(" "),v("p",[v("strong",[T._v("那么，“标准答案”里的那些区别是怎么回事？")])]),T._v(" "),v("p",[T._v("在我大万维网世界中，TCP就像汽车，我们用TCP来运输数据，它很可靠，从来不会发生丢件少件的现象。"),v("strong",[T._v("但是如果路上跑的全是看起来一模一样的汽车，那这个世界看起来是一团混乱")]),T._v("，无法区分通过车辆区分它们的作用。HTTP给汽车运输设定了好几个服务类别，有GET, POST, PUT, DELETE等等，HTTP规定，当执行GET请求的时候，要给汽车贴上GET的标签（设置method为GET），而且要求把传送的数据放在车顶上（url中）以方便记录。如果是POST请求，就要在车上贴上POST的标签，并把货物放在车厢里。当然，你也可以在GET的时候往车厢内偷偷藏点货物，但是这是很不光彩；也可以在POST的时候在车顶上也放一些数据，让人觉得傻乎乎的。HTTP只是个行为准则，而TCP才是GET和POST怎么实现的基本。")]),T._v(" "),v("p",[v("strong",[T._v("但是，我们只看到HTTP对GET和POST参数的传送渠道（url还是requrest body）提出了要求。“标准答案”里关于参数大小的限制又是从哪来的呢？")])]),T._v(" "),v("p",[T._v("实际上 HTTP 对URL的长度没有做任何限制")]),T._v(" "),v("blockquote",[v("p",[T._v("HTTP协议对 URI 的长度没有任何先验限制。 服务器必须能够处理它们服务的任何资源的 URI，并且如果它们提供可以生成此类 URI 的基于 GET 的形式，则应当能够处理无限长度的 URI。 如果URI的长度超出服务器的处理能力，则服务器应返回 414（请求 URI 太长）状态")])]),T._v(" "),v("p",[T._v("在我大万维网世界中，还有另一个重要的角色：运输公司。不同的浏览器（发起 http 请求）和服务器（接受 http 请求）就是不同的运输公司。 虽然理论上，你可以在车顶上无限的堆货物（url 中无限加参数）。但是运输公司可不傻，装货和卸货也是有很大成本的，他们会限制单次运输量来控制风险，数据量太大对浏览器和服务器都是很大负担。")]),T._v(" "),v("p",[T._v("业界不成文的规定是，（大多数）浏览器通常都会限制 url 长度在 2K 个字节，而（大多数）服务器最多处理 64K 大小的 url。超过的部分，恕不处理。如果你用GET服务，在 request body 偷偷藏了数据，不同服务器的处理方式也是不同的，有些服务器会帮你卸货，读出数据，有些服务器直接忽略，所以，虽然GET可以带 request body，也不能保证一定能被接收到哦。")]),T._v(" "),v("h2",{attrs:{id:"产生不同数量的数据包"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#产生不同数量的数据包"}},[T._v("#")]),T._v(" 产生不同数量的数据包")]),T._v(" "),v("p",[T._v("GET 和 POST 还有一个重大区别：GET产生一个TCP数据包，POST产生两个TCP数据包。")]),T._v(" "),v("p",[T._v("具体来说就是，对于GET方式的请求，浏览器会把 http header 和 data 一并发送出去，服务器响应 200（返回数据）；而对于 POST，浏览器先发送 header，服务器响应 100 continue，浏览器再发送 data，服务器响应 200 ok（返回数据）。")])])}),[],!1,null,null,null);t.default=e.exports}}]);