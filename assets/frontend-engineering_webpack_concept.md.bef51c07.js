import{_ as s,r as n,o as a,c as p,a as l,b as e,d as o,e as c}from"./app.070707c9.js";const t=JSON.parse('{"title":"webpack 核心概念","description":"","frontmatter":{},"headers":[{"level":2,"title":"entry","slug":"entry","link":"#entry","children":[{"level":3,"title":"单入口","slug":"单入口","link":"#单入口","children":[]},{"level":3,"title":"多入口","slug":"多入口","link":"#多入口","children":[]}]},{"level":2,"title":"output","slug":"output","link":"#output","children":[{"level":3,"title":"单入口配置","slug":"单入口配置","link":"#单入口配置","children":[]},{"level":3,"title":"多入口配置","slug":"多入口配置","link":"#多入口配置","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"relativePath":"frontend-engineering/webpack/concept.md"}'),r={name:"frontend-engineering/webpack/concept.md"},D=e("h1",{id:"webpack-核心概念",tabindex:"-1"},[o("webpack 核心概念 "),e("a",{class:"header-anchor",href:"#webpack-核心概念","aria-hidden":"true"},"#")],-1),y=c('<p>上一节的例子中，已经通过一个配置实现来进行打包了，那怎么配置多入口呢？接下来，学习 webpack 的概念和常用的配置。</p><h2 id="entry" tabindex="-1">entry <a class="header-anchor" href="#entry" aria-hidden="true">#</a></h2><p><code>entry</code> 在 webpack 是非常重要的概念，在 webpack 里，通过 <code>entry</code> 指定打包的入口。</p><p>webpack 是一个模块打包器，在 webpack 里，所有的都是模块，不管是我们的代码，或者其他资源，图片、字体 等。任何时候，一个文件依赖于另一个文件，webpack 就把此视为文件之间有依赖关系。webpack 根据 <code>entry</code> 定义的模块开始处理我们的应用程序。从 <code>entry</code> 开始，webpack 递归的构建一个依赖图，这个依赖图包含这应用程序所需的每个模块，然后将所有模块打包为少量的 bundle（通常只有一个），可有浏览器加载。</p><p>接下来看看 <code>entry</code> 的配置，<code>entry</code> 分两种：单入口和多入口。</p><h3 id="单入口" tabindex="-1">单入口 <a class="header-anchor" href="#单入口" aria-hidden="true">#</a></h3><p>用法：<code>entry: string</code></p><p><strong>webpack.config.js</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">entry</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./path/to/my/entry/file.js</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#89DDFF;">};</span></span>\n<span class="line"></span></code></pre></div><h3 id="多入口" tabindex="-1">多入口 <a class="header-anchor" href="#多入口" aria-hidden="true">#</a></h3><p>用法：<code>entry: {[entryChunkName: string]: string}</code></p><p><strong>webpack.config.js</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">entry</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">app</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./src/app.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">adminApp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./src/adminApp.js</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">};</span></span>\n<span class="line"></span></code></pre></div><blockquote><p>根据经验：每个 HTML 文档只使用一个入口起点。</p></blockquote><h2 id="output" tabindex="-1">output <a class="header-anchor" href="#output" aria-hidden="true">#</a></h2><p><code>output</code> 是用来告诉 webpack 如何向硬盘写入编译文件。也就是说 <code>entry</code> 是用来告诉 webpack 从哪里开始打包我们的源代码，而 <code>output</code> 对应的打包之后的文件的存储。</p><p>注意，即使可以存在多个 <code>entry</code> 起点，但只指定一个 <code>output</code> 配置。</p><h3 id="单入口配置" tabindex="-1">单入口配置 <a class="header-anchor" href="#单入口配置" aria-hidden="true">#</a></h3><p>比较简单，只需要指定 <code>filename</code> 和 <code>path</code> 就可以了。</p><p><strong>webpack.config.js</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">output</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">filename</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bundle.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> __dirname </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/dist</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">};</span></span>\n<span class="line"></span></code></pre></div><p>此配置将一个单独的 <code>bundle.js</code> 文件输出到 <code>dist</code> 目录中。</p><h3 id="多入口配置" tabindex="-1">多入口配置 <a class="header-anchor" href="#多入口配置" aria-hidden="true">#</a></h3><p>如果配置创建了多个单独的 &quot;chunk&quot;（例如，使用多个入口起点或使用像 CommonsChunkPlugin 这样的插件），需要通过“<strong>占位符</strong>”确保文件名称的唯一。</p><p><strong>webpack.config.js</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">entry</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">app</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./src/app.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">search</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./src/search.js</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">output</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">filename</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[name].js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// 占位符</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> __dirname </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/dist</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">};</span></span>\n<span class="line"><span style="color:#676E95;">// 写入到硬盘：./dist/app.js, ./dist/search.js</span></span>\n<span class="line"></span></code></pre></div><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-hidden="true">#</a></h2><ul><li><a href="https://webpack.docschina.org/concepts/entry-points/" target="_blank" rel="noreferrer">入口起点 entry</a></li><li><a href="https://webpack.docschina.org/concepts/output/" target="_blank" rel="noreferrer">输出 output</a></li></ul>',28);const i=s(r,[["render",function(s,e,o,c,t,r){const i=n("VueJobs");return a(),p("div",null,[D,l(i),y])}]]);export{t as __pageData,i as default};
