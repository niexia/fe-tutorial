import{_ as T,r as e,o as t,c as r,a,b as l,d as P,e as p}from"./app.31755bf0.js";const s=JSON.parse('{"title":"get 和 post 的区别","description":"","frontmatter":{},"headers":[{"level":2,"title":"本质上没有区别","slug":"本质上没有区别","link":"#本质上没有区别","children":[]},{"level":2,"title":"产生不同数量的数据包","slug":"产生不同数量的数据包","link":"#产生不同数量的数据包","children":[]}],"relativePath":"network/get-post.md"}'),o={name:"network/get-post.md"},i=l("h1",{id:"get-和-post-的区别",tabindex:"-1"},[P("get 和 post 的区别 "),l("a",{class:"header-anchor",href:"#get-和-post-的区别","aria-hidden":"true"},"#")],-1),d=p('<p>直观的区别就是GET把参数包含在URL中，POST通过request body传递参数。</p><p>你可能可以给出了一个“标准答案”：</p><ul><li>GET请求会被浏览器主动cache，而POST不会，除非手动设置。</li><li>GET请求只能进行url编码，而POST支持多种编码方式。</li><li>GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。</li><li>GET请求在URL中传送的参数是有长度限制的，而POST么有。</li><li>对参数的数据类型，GET只接受ASCII字符，而POST没有限制。</li><li>GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。</li><li>GET参数通过URL传递，POST放在Request body中。</li></ul><p>很遗憾，这不是我们要的回答！</p><h2 id="本质上没有区别" tabindex="-1">本质上没有区别 <a class="header-anchor" href="#本质上没有区别" aria-hidden="true">#</a></h2><p>如果我告诉你GET和POST本质上没有区别你信吗？</p><p>GET和POST是什么？HTTP协议中的两种发送请求的方法。HTTP的底层是TCP/IP。所以GET和POST的底层也是TCP/IP，也就是说，GET/POST都是TCP链接。GET和POST能做的事情是一样一样的。你要给GET加上request body，给POST带上url参数，技术上是完全行的通的。</p><p><strong>那么，“标准答案”里的那些区别是怎么回事？</strong></p><p>在我大万维网世界中，TCP就像汽车，我们用TCP来运输数据，它很可靠，从来不会发生丢件少件的现象。<strong>但是如果路上跑的全是看起来一模一样的汽车，那这个世界看起来是一团混乱</strong>，无法区分通过车辆区分它们的作用。HTTP给汽车运输设定了好几个服务类别，有GET, POST, PUT, DELETE等等，HTTP规定，当执行GET请求的时候，要给汽车贴上GET的标签（设置method为GET），而且要求把传送的数据放在车顶上（url中）以方便记录。如果是POST请求，就要在车上贴上POST的标签，并把货物放在车厢里。当然，你也可以在GET的时候往车厢内偷偷藏点货物，但是这是很不光彩；也可以在POST的时候在车顶上也放一些数据，让人觉得傻乎乎的。HTTP只是个行为准则，而TCP才是GET和POST怎么实现的基本。</p><p><strong>但是，我们只看到HTTP对GET和POST参数的传送渠道（url还是requrest body）提出了要求。“标准答案”里关于参数大小的限制又是从哪来的呢？</strong></p><p>实际上 HTTP 对URL的长度没有做任何限制</p><blockquote><p>HTTP协议对 URI 的长度没有任何先验限制。 服务器必须能够处理它们服务的任何资源的 URI，并且如果它们提供可以生成此类 URI 的基于 GET 的形式，则应当能够处理无限长度的 URI。 如果URI的长度超出服务器的处理能力，则服务器应返回 414（请求 URI 太长）状态</p></blockquote><p>在我大万维网世界中，还有另一个重要的角色：运输公司。不同的浏览器（发起 http 请求）和服务器（接受 http 请求）就是不同的运输公司。 虽然理论上，你可以在车顶上无限的堆货物（url 中无限加参数）。但是运输公司可不傻，装货和卸货也是有很大成本的，他们会限制单次运输量来控制风险，数据量太大对浏览器和服务器都是很大负担。</p><p>业界不成文的规定是，（大多数）浏览器通常都会限制 url 长度在 2K 个字节，而（大多数）服务器最多处理 64K 大小的 url。超过的部分，恕不处理。如果你用GET服务，在 request body 偷偷藏了数据，不同服务器的处理方式也是不同的，有些服务器会帮你卸货，读出数据，有些服务器直接忽略，所以，虽然GET可以带 request body，也不能保证一定能被接收到哦。</p><h2 id="产生不同数量的数据包" tabindex="-1">产生不同数量的数据包 <a class="header-anchor" href="#产生不同数量的数据包" aria-hidden="true">#</a></h2><p>GET 和 POST 还有一个重大区别：GET产生一个TCP数据包，POST产生两个TCP数据包。</p><p>具体来说就是，对于GET方式的请求，浏览器会把 http header 和 data 一并发送出去，服务器响应 200（返回数据）；而对于 POST，浏览器先发送 header，服务器响应 100 continue，浏览器再发送 data，服务器响应 200 ok（返回数据）。</p>',17);const n=T(o,[["render",function(T,l,P,p,s,o){const n=e("VueJobs");return t(),r("div",null,[i,a(n),d])}]]);export{s as __pageData,n as default};
